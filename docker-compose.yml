services:
  nginx:
    image: nginx:latest
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./conf.d:/etc/nginx/conf.d
      - /home/gz/data/pornspotlight/assets/:/home/gz/data/pornspotlight/assets/
      - /home/gz/data/pornspotlight/media/:/home/gz/data/pornspotlight/media/
      - certs:/etc/letsencrypt
    command: ["nginx", "-g", "daemon off;"]
    networks:
      - proxy-network
    depends_on:
      - n8n

  certbot:
    image: certbot/certbot:latest
    volumes:
      - certs:/etc/letsencrypt
      - ./conf.d:/etc/nginx/conf.d
      - ./webroot:/webroot
    environment:
      - CERTBOT_EMAIL=${CERTBOT_EMAIL}
    entrypoint: >
      /bin/sh -c 'if [ ! -f /etc/letsencrypt/live/pornspotlight.link/fullchain.pem ]; then
      certbot certonly --webroot -w /webroot -d pornspotlight.link -d www.pornspotlight.link -d n8n.theintelliagents.com 
      --email "$$CERTBOT_EMAIL" --agree-tos --no-eff-email; fi'
    networks:
      - proxy-network

  redis:
    image: redis:latest
    restart: unless-stopped
    networks:
      - proxy-network

  postgres:
    image: postgres:latest
    restart: unless-stopped
    environment:
      - POSTGRES_USER=superuser
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=postgres
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - proxy-network
    command: >
      postgres -c 'max_connections=200'
    ports:
      - "5432:5432"
  n8n:
    image: docker.n8n.io/n8nio/n8n
    restart: always
    ports:
      - "5678:5678"  # Still binds to localhost for security
    environment:
      - N8N_HOST=n8n.theintelliagents.com
      - N8N_PORT=5678
      - N8N_PROTOCOL=https
      - NODE_ENV=production
      - WEBHOOK_URL=https://n8n.theintelliagents.com/
      - GENERIC_TIMEZONE=America/Los_Angeles
    volumes:
      - n8n_data:/home/node/.n8n
    networks:
      - proxy-network

networks:
  proxy-network:
    driver: bridge

volumes:
  postgres-data:
    driver: local
  certs:
    driver: local
  n8n_data:
    driver: local
