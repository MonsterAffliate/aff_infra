services:
  nginx:
    image: nginx:latest
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./conf.d:/etc/nginx/conf.d
      - /home/gz/data/pornspotlight/assets/:/home/gz/data/pornspotlight/assets/
      - /home/gz/data/pornspotlight/media/:/home/gz/data/pornspotlight/media/
      - certs:/etc/letsencrypt
    command: ["nginx", "-g", "daemon off;"]
    networks:
      - proxy-network

  certbot:
    image: certbot/certbot:latest
    restart: unless-stopped
    volumes:
      - certs:/etc/letsencrypt
      - ./conf.d:/etc/nginx/conf.d
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - CERTBOT_EMAIL=${CERTBOT_EMAIL}  # Define the email as an env var
    entrypoint: >
      /bin/sh -c 'trap exit TERM; if [ ! -f /etc/letsencrypt/live/pornspotlight.link/fullchain.pem ]; then
      certbot certonly --webroot -w /etc/nginx/conf.d -d pornspotlight.link -d www.pornspotlight.link
      --email "$$CERTBOT_EMAIL" --agree-tos --no-eff-email; fi;
      while :; do certbot renew && docker restart nginx; sleep 12h & wait $${!}; done;'
    networks:
      - proxy-network

  redis:
    image: redis:latest
    restart: unless-stopped
    networks:
      - proxy-network

  postgres:
    image: postgres:latest
    restart: unless-stopped
    environment:
      - POSTGRES_USER=superuser
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=postgres
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - proxy-network
    command: >
      postgres -c 'max_connections=200'
    ports:
      - "5432:5432"

networks:
  proxy-network:
    driver: bridge

volumes:
  postgres-data:
    driver: local
  certs:
    driver: local