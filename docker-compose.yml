version: "3"
services:
  traefik:
    image: traefik:v2.11
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080" # Dashboard on default port, no conflict
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /home/gz/data/pornspotlight/assets/:/home/gz/data/pornspotlight/assets/
      - /home/gz/data/pornspotlight/media/:/home/gz/data/pornspotlight/media/
      - traefik-certs:/etc/traefik/certs
    command:
      - "--log.level=DEBUG"
      - "--providers.docker=true"
      - "--providers.docker.network=aff_infra_proxy-network" # Matches project-prefixed network
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--api=true"
      - "--api.dashboard=true"
      - "--api.insecure=true" # Dashboard on 8080 without auth (testing)
      - "--certificatesresolvers.le.acme.email=${CERTBOT_EMAIL}"
      - "--certificatesresolvers.le.acme.storage=/etc/traefik/certs/acme.json"
      - "--certificatesresolvers.le.acme.httpchallenge.entrypoint=web"
    networks:
      - proxy-network

  redis:
    image: redis:latest
    restart: unless-stopped
    networks:
      - proxy-network

  postgres:
    image: postgres:latest
    restart: unless-stopped
    environment:
      - POSTGRES_USER=superuser
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=postgres
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - proxy-network
    command: >
      postgres -c 'max_connections=200'
    ports:
      - "5432:5432"

networks:
  proxy-network:

volumes:
  postgres-data:
    driver: local
  traefik-certs:
    driver: local