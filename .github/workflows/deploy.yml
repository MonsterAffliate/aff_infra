name: Deploy Nginx Reverse Proxy

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install SSH Key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          known_hosts: unnecessary

      - name: Generate .env file
        run: |
          echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" > .env
          echo "CERTBOT_EMAIL=${{ vars.CERTBOT_EMAIL }}" >> .env  # Add Certbot email

      - name: Add Known Hosts
        run: |
          ssh-keyscan -H ${{ secrets.SERVER_DOMAIN }} >> ~/.ssh/known_hosts

      - name: Deploy with Docker Compose
        run: |
          rsync -avz --progress --delete -e "ssh" ./ ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_DOMAIN }}:~/aff_infra/
          ssh ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_DOMAIN }} << 'EOF'
            mkdir -p ~/aff_infra
            cd ~/aff_infra

            echo "${{ github.sha }}" > deploy_version.txt

            docker-compose pull
            docker-compose up -d --build --force-recreate --remove-orphans

            sleep 30
            docker-compose logs certbot

            timeout 60s bash -c "until curl -s -f -k https://localhost:443/health; do sleep 2; echo 'Checking HTTPS...'; done" || {
              echo "Deployment failed, rolling back..."
              docker-compose down
              docker-compose logs nginx certbot
              exit 1
            }

            # Check if cron job exists, add only if missing
            CRON_JOB="0 */12 * * * cd ~/aff_infra && docker-compose run --rm certbot renew --webroot -w /webroot && docker-compose restart nginx"
            if ! crontab -l 2>/dev/null | grep -qF "$CRON_JOB"; then
              (crontab -l 2>/dev/null || echo ""; echo "$CRON_JOB") | crontab -
            fi
            
            docker image prune -f
            docker container prune -f
          EOF