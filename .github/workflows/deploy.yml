name: Deploy Nginx Reverse Proxy

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install SSH Key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          known_hosts: unnecessary

      - name: Generate .env file
        run: |
          echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" > .env
          echo "CERTBOT_EMAIL=${{ vars.CERTBOT_EMAIL }}" >> .env  # Add Certbot email

      - name: Add Known Hosts
        run: |
          ssh-keyscan -H ${{ secrets.SERVER_DOMAIN }} >> ~/.ssh/known_hosts

      - name: Deploy with Docker Compose
        run: |
          # Transfer files to server
          rsync -avz --progress --delete -e "ssh" ./ ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_DOMAIN }}:~/aff_infra/

          # SSH to deploy with minimal downtime
          ssh ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_DOMAIN }} << 'EOF'
            mkdir -p ~/aff_infra
            cd ~/aff_infra

            # Store deployment version
            echo "${{ github.sha }}" > deploy_version.txt

            # Install Docker and Docker Compose if not present
            sudo apt update
            sudo apt install -y docker.io docker-compose

            # Ensure volume directories exist
            sudo mkdir -p /home/gz/data/pornspotlight/assets /home/gz/data/pornspotlight/media
            sudo chown -R $(whoami):$(whoami) /home/gz/data

            # Pull and build images
            docker-compose pull
            docker-compose up -d --build --force-recreate --remove-orphans

            # Wait for Certbot to generate certificates
            sleep 30
            docker-compose logs certbot

            # Wait for Nginx to be ready with HTTPS
            timeout 60s bash -c "until curl -s -f -k https://localhost:443/health; do sleep 2; echo 'Checking HTTPS...'; done" || {
              echo "Deployment failed, rolling back..."
              docker-compose down
              docker-compose logs nginx certbot
              exit 1
            }

            # Cleanup
            docker image prune -f
            docker container prune -f
          EOF